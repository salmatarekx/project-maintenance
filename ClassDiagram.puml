@startuml
class com.LMS.LMS.ControllerLayer.NotificationController {
- NotificationService notificationService
+ ResponseEntity<Notification> CreateNotification(NotificationDTO)
+ List<Notification> getNotifications(Long,boolean)
+ List<Notification> getInstructorNotifications(Long)
+ void markAsRead(Long)
}


class com.LMS.LMS.ModelLayer.Quiz {
- Long id
- String title
- String description
- LocalDateTime startTime
- LocalDateTime endTime
- Long maxAttempts
- Long timeLimit
- Long maxScore
- Course course
+ Long getId()
+ void setId(Long)
+ String getTitle()
+ void setTitle(String)
+ String getDescription()
+ void setDescription(String)
+ LocalDateTime getStartTime()
+ void setStartTime(LocalDateTime)
+ LocalDateTime getEndTime()
+ void setEndTime(LocalDateTime)
+ Long getMaxAttempts()
+ void setMaxAttempts(Long)
+ Long getTimeLimit()
+ void setTimeLimit(Long)
+ Long getMaxScore()
+ void setMaxScore(Long)
+ Course getCourse()
+ void setCourse(Course)
}


class com.LMS.LMS.ServiceLayer.AssignmentTaskService {
- AssignmentTaskRepository taskRepository
+ AssignmentTask createTask(AssignmentTask)
+ List<AssignmentTask> getAssignmentTasks(Assignment)
+ Optional<AssignmentTask> getTaskById(Long)
+ void deleteTask(Long)
+ AssignmentTask updateTask(Long,AssignmentTask)
}


class com.LMS.LMS.ControllerLayer.AssignmentGradesController {
- AssignmentGradesService gradesService
+ ResponseEntity<?> submitAssignment(Long,Long,MultipartFile)
+ ResponseEntity<byte[]> downloadSubmission(Long)
+ ResponseEntity<AssignmentGrades> gradeSubmission(Long,String,String)
+ ResponseEntity<List<AssignmentGrades>> getStudentGrades(Long)
}


class com.LMS.LMS.ControllerLayer.CourseController {
- CourseService courseService
+ ResponseEntity<String> createCourse(CreateCourseRequest)
+ ResponseEntity<List<Course>> getAllCourses()
+ ResponseEntity<Course> getCourseById(Long)
+ ResponseEntity<String> updateCourse(Long,UpdateCourseRequest)
+ ResponseEntity<String> deleteCourse(Long,DeleteCourseRequest)
+ ResponseEntity<String> enrollStudent(Long,Long)
+ ResponseEntity<List<User>> getEnrolledStudents(Long)
}


class com.LMS.LMS.ModelLayer.Assignment {
- Long id
- String title
- String description
- LocalDateTime dueDate
- Long maxScore
- Course course
- User instructor
+ Long getId()
+ void setId(Long)
+ String getTitle()
+ void setTitle(String)
+ String getDescription()
+ void setDescription(String)
+ LocalDateTime getDueDate()
+ void setDueDate(LocalDateTime)
+ Long getMaxScore()
+ void setMaxScore(Long)
+ Course getCourse()
+ void setCourse(Course)
+ User getInstructor()
+ void setInstructor(User)
}


class com.LMS.LMS.DTO.AssignmentDetailsDTO {
- Long assignmentId
- String assignmentTitle
- LocalDateTime dueDate
- Double maxScore
- String courseTitle
- String courseInstructor
+ Long getAssignmentId()
+ String getAssignmentTitle()
+ String getCourseTitle()
+ String getCourseInstructor()
+ LocalDateTime getDueDate()
+ Double getMaxScore()
}


class com.LMS.LMS.ControllerLayer.AdminUserController {
- AdminUserService adminUserService
+ ResponseEntity<String> CreateUser(UserRegistration)
}


class com.LMS.LMS.DTO.QuizDetailsDTO {
- Long id
- String title
- LocalDateTime startTime
- LocalDateTime endTime
- Long maxScore
- String courseTitle
- String courseInstructor
+ Long getId()
+ String getTitle()
+ String getCourseTitle()
+ String getCourseInstructor()
+ LocalDateTime getStartTime()
+ LocalDateTime getEndTime()
+ Long getMaxScore()
}


interface com.LMS.LMS.RepositoryLayer.AttendanceRepo {
}
interface com.LMS.LMS.RepositoryLayer.AssignmentGradesRepo {
~ List<AssignmentGrades> findByStudent(User)
~ List<AssignmentGrades> findByAssignment(Assignment)
~ AssignmentGrades findByStudentAndAssignment(User,Assignment)
}

class com.LMS.LMS.DTO.UpdateCourseRequest {
- CourseDTO courseDTO
- User currentUser
+ CourseDTO getCourseDTO()
+ void setCourseDTO(CourseDTO)
+ User getCurrentUser()
+ void setCurrentUser(User)
}


class com.LMS.LMS.ServiceLayer.InstructorCourseService {
- CourseService courseService
- UserRepository userRepository
- CourseRepository courseRepository
+ Course CreateCourse(CourseDTO,User)
+ void removeStudentfromCourse(Long,Long)
}


class com.LMS.LMS.ServiceLayer.AdminCourseService {
- CourseService courseService
+ Course createCourse(CourseDTO,User)
+ void deleteCourse(Long,User)
}


class com.LMS.LMS.DTO.UserRegistration {
- String username
- String email
- String password
- Role role
+ String getUsername()
+ void setUsername(String)
+ String getEmail()
+ void setEmail(String)
+ String getPassword()
+ void setPassword(String)
+ Role getRole()
+ void setRole(Role)
}


interface com.LMS.LMS.RepositoryLayer.QuizRepo {
~ Optional<Quiz> findById(Long)
}

class com.LMS.LMS.ServiceLayer.StudentQuizAssignmentService {
- QuizService quizService
- QuizGradesService quizGradesService
- AssignmentService assignmentService
- AssignmentGradesService assignmentGradesService
- AssignmentGradesRepo assignmentGradesRepo
- AssignmentRepo assignmentRepo
- UserRepository userRepository
- EmailNotificationService emailnotificationService
- NotificationRepository notificationRepository
+ QuizGrades takeQuiz(Long,Long)
+ AssignmentGrades handInAssignment(Long,Long,MultipartFile)
+ List<AssignmentGrades> viewAssignmentsGrades(Long)
+ List<AssignmentGrades> viewAssignmentGrade(Long)
+ AssignmentGrades ViewStudentAssignmentGrade(Long,Long)
+ List<QuizGrades> viewQuizzesGrades(Long)
+ List<QuizGrades> viewQuizGrade(Long)
}


class com.LMS.LMS.ServiceLayer.QuizService {
- QuizRepo quizRepo
- QuizGradesRepo gradesRepo
- UserRepository userRepo
+ Quiz createQuiz(Quiz)
+ Optional<Quiz> getQuiz(Long)
+ List<Quiz> getAllQuizzes()
+ QuizGrades startQuiz(Long,Long)
+ QuizGrades submitQuiz(QuizGrades)
+ void DeleteQuiz(long)
}


class com.LMS.LMS.ModelLayer.AssignmentGrades {
- String fileName
- String fileType
- byte[] fileData
- Long id
- User student
- Assignment assignment
- String grade
- String feedback
- LocalDateTime submissionDate
- String submissionContent
- Boolean isLate
+ Long getId()
+ void setId(Long)
+ User getStudent()
+ void setStudent(User)
+ Assignment getAssignment()
+ void setAssignment(Assignment)
+ String getGrade()
+ void setGrade(String)
+ String getFeedback()
+ void setFeedback(String)
+ LocalDateTime getSubmissionDate()
+ void setSubmissionDate(LocalDateTime)
+ String getSubmissionContent()
+ void setSubmissionContent(String)
+ Boolean getIsLate()
- void updateIsLate()
+ String getFileName()
+ void setFileName(String)
+ String getFileType()
+ void setFileType(String)
+ byte[] getFileData()
+ void setFileData(byte[])
}


class com.LMS.LMS.ServiceLayer.UserService {
- UserRepository userRepository
+ Optional<User> getUserById(Long)
+ User Register(UserRegistration)
+ User Login(LoginReq)
+ User ViewProfile(long)
+ User UpdateProfile(Long,UserRegistration)
}


class com.LMS.LMS.ServiceLayer.QuestionService {
- QuestionRepository questionRepository
+ Question createQuestion(Question)
+ List<Question> getQuizQuestions(Quiz)
+ void deleteQuestion(Long)
}


class com.LMS.LMS.ControllerLayer.StudentQuizAssignmentController {
- StudentQuizAssignmentService studentQuizAssignmentService
- QuizService quizService
+ ResponseEntity<QuizGrades> takeQuiz(Long,Long)
+ ResponseEntity<AssignmentGrades> handInAssignment(Long,Long,MultipartFile)
+ ResponseEntity<List<AssignmentGrades>> viewAssignmentsGrades(Long)
+ ResponseEntity<List<QuizGrades>> viewQuizzesGrades(Long)
+ ResponseEntity<QuizGrades> submitQuiz(Long,QuizGrades)
+ ResponseEntity<AssignmentGrades> ViewAssignmentGrade(Long,Long)
}


class com.LMS.LMS.ControllerLayer.InstructorCourseController {
- InstructorCourseService instructorCourseService
- UserService userService
- CourseService courseService
- TrackingPerformanceService performanceTrackingService
- QuizService quizService
- CourseRepository courseRepository
- AssignmentService assignmentService
- StudentQuizAssignmentService studentQuizAssignmentService
- AssignmentTaskService taskService
- QuestionService questionService
+ ResponseEntity<String> CreateCourse(CourseDTO,User)
+ ResponseEntity<String> RemoveStudentFromCourse(Long,Long)
+ ResponseEntity<Map<String,Object>> getStudentPerformance(Long,Long)
+ ResponseEntity<String> generateReport(Long,Long)
+ ResponseEntity<Quiz> createQuiz(Map<String,Object>)
+ ResponseEntity<List<Quiz>> getAllQuizzes()
+ ResponseEntity<Quiz> getQuiz(Long)
+ ResponseEntity<QuizGrades> startQuiz(Long,Long)
+ ResponseEntity<Assignment> createAssignment(Map<String,Object>)
+ ResponseEntity<List<Assignment>> getAllAssignments()
+ ResponseEntity<List<AssignmentGrades>> viewAssignmentGrade(Long)
+ ResponseEntity<AssignmentTask> addTaskToAssignment(Long,Map<String,Object>)
+ ResponseEntity<List<AssignmentTask>> getAssignmentTasks(Long)
+ ResponseEntity<Void> deleteTask(Long)
+ ResponseEntity<List<QuizGrades>> viewQuizGrade(Long)
+ ResponseEntity<Question> addQuestionToQuiz(Long,Map<String,Object>)
+ ResponseEntity<List<Question>> getQuizQuestions(Long)
+ ResponseEntity<Void> deleteQuestion(Long)
+ ResponseEntity<String> DeleteAssignment(long)
+ ResponseEntity<String> DeleteQuiz(long)
}


class com.LMS.LMS.ModelLayer.Question {
- Long id
- Quiz quiz
- String questionText
- String optionA
- String optionB
- String optionC
- String optionD
- String correctAnswer
- Integer points
+ Long getId()
+ void setId(Long)
+ void setQuiz(Quiz)
+ String getQuestionText()
+ void setQuestionText(String)
+ String getOptionA()
+ void setOptionA(String)
+ String getOptionB()
+ void setOptionB(String)
+ String getOptionC()
+ void setOptionC(String)
+ String getOptionD()
+ void setOptionD(String)
+ String getCorrectAnswer()
+ void setCorrectAnswer(String)
+ Integer getPoints()
+ void setPoints(Integer)
}


class com.LMS.LMS.ServiceLayer.EmailNotificationService {
- JavaMailSender mailSender
- void sendEmail(String,String,String)
+ void sendEnrollmentConfirmation(String,String)
+ void sendGradedAssignmentConfirmation(String,String,String)
}


interface com.LMS.LMS.RepositoryLayer.AssignmentRepo {
}
class com.LMS.LMS.ServiceLayer.AssignmentGradesService {
- AssignmentGradesRepo assignmentGradesRepo
- AssignmentRepo assignmentRepo
- UserRepository userRepo
- boolean isValidFileType(String)
+ AssignmentGrades submitAssignment(Long,Long,MultipartFile)
+ byte[] getSubmissionFile(Long)
+ AssignmentGrades gradeSubmission(Long,String,String)
+ List<AssignmentGrades> getAssignmentsGrades(long)
+ List<AssignmentGrades> getAssignmentGrade(long)
}


class com.LMS.LMS.ModelLayer.User {
- Long ID
- String UserName
- String Email
- String Password
- Role role
+ Long getID()
+ void setID(Long)
+ String getUserName()
+ void setUserName(String)
+ String getEmail()
+ void setEmail(String)
+ String getPassword()
+ void setPassword(String)
+ Role getRole()
+ void setRole(Role)
}


class com.LMS.LMS.ModelLayer.QuizGrades {
- Long id
- Quiz quiz
- User student
- String grade
- String feedback
- LocalDateTime startTime
- LocalDateTime endTime
- Long attemptNumber
- String answers
+ Long getId()
+ void setId(Long)
+ Quiz getQuiz()
+ void setQuiz(Quiz)
+ User getStudent()
+ void setStudent(User)
+ String getGrades()
+ void setGrade(String)
+ String getFeedback()
+ void setFeedback(String)
+ LocalDateTime getStartTime()
+ void setStartTime(LocalDateTime)
+ LocalDateTime getEndTime()
+ void setEndTime(LocalDateTime)
+ Long getAttemptNumber()
+ void setAttemptNumber(Long)
+ String getAnswers()
+ void setAnswers(String)
}


class com.LMS.LMS.DTO.CreateCourseRequest {
- CourseDTO courseDTO
- User currentUser
+ CourseDTO getCourseDTO()
+ void setCourseDTO(CourseDTO)
+ User getCurrentUser()
+ void setCurrentUser(User)
}


class com.LMS.LMS.DTO.CourseDTO {
- String title
- String description
- String duration
- List<String> mediaFiles
- User instructor
+ String getTitle()
+ void setTitle(String)
+ String getDescription()
+ void setDescription(String)
+ String getDuration()
+ void setDuration(String)
+ List<String> getMediaFiles()
+ void setMediaFiles(List<String>)
+ User getInstructor()
+ void setInstructor(User)
}


class com.LMS.LMS.DTO.LoginReq {
- String email
- String password
+ String getEmail()
+ void setEmail(String)
+ String getPassword()
+ void setPassword(String)
}


class com.LMS.LMS.DTO.AssignmentSubmissionDTO {
- Long assignmentId
- Long studentId
- MultipartFile file
+ Long getAssignmentId()
+ void setAssignmentId(Long)
+ Long getStudentId()
+ void setStudentId(Long)
+ MultipartFile getFile()
+ void setFile(MultipartFile)
}


class com.LMS.LMS.Application {
+ {static} void main(String[])
}

class com.LMS.LMS.ServiceLayer.TrackingPerformanceService {
- AttendanceRepo attendanceRepo
- QuizGradesRepo quizGradesRepo
- AssignmentGradesRepo assignmentGradesRepo
+ Map<String,Object> getSimplifiedPerformance(User,Course)
+ void generateExcelReport(User,Course)
}


class com.LMS.LMS.ModelLayer.Lesson {
- Long id
- String topic
- Course course
+ Long getId()
+ void setId(Long)
+ String getTopic()
+ void setTopic(String)
+ Course getCourse()
+ void setCourse(Course)
}


class com.LMS.LMS.ControllerLayer.QuizGradesController {
- QuizGradesService gradesService
+ ResponseEntity<QuizGrades> startQuiz(Long,Long)
+ ResponseEntity<QuizGrades> submitQuiz(Long,String)
+ ResponseEntity<QuizGrades> gradeQuiz(Long,String,String)
+ ResponseEntity<List<QuizGrades>> getStudentQuizGrades(Long)
+ ResponseEntity<List<QuizGrades>> getQuizGrades(Long)
}


class com.LMS.LMS.ModelLayer.AssignmentTask {
- Long id
- Assignment assignment
- String taskDescription
- String expectedOutput
- Integer points
- String taskType
- String additionalResources
+ Long getId()
+ void setId(Long)
+ Assignment getAssignment()
+ void setAssignment(Assignment)
+ String getTaskDescription()
+ void setTaskDescription(String)
+ String getExpectedOutput()
+ void setExpectedOutput(String)
+ Integer getPoints()
+ void setPoints(Integer)
+ String getTaskType()
+ void setTaskType(String)
+ String getAdditionalResources()
+ void setAdditionalResources(String)
}


interface com.LMS.LMS.RepositoryLayer.LessonRepo {
}
interface com.LMS.LMS.RepositoryLayer.LessonRepository {
}
interface com.LMS.LMS.RepositoryLayer.CourseRepository {
}
class com.LMS.LMS.ServiceLayer.StudentCourseService {
- CourseService courseService
- TrackingPerformanceService trackingPerformanceService
+ void Enroll(Long,Long)
+ void AccessCourseMaterials()
}


class com.LMS.LMS.ModelLayer.Notification {
- Long id
- Long recipientId
- Long senderId
- String message
- String type
- LocalDateTime createdAt
- boolean isRead
+ Long getId()
+ Long getRecipientId()
+ Long getSenderId()
+ String getMessage()
+ String getType()
+ LocalDateTime getCreatedAt()
+ boolean isRead()
+ void setId(Long)
+ void setRecipientId(Long)
+ void setSenderId(Long)
+ void setMessage(String)
+ void setType(String)
+ void setCreatedAt(LocalDateTime)
+ void setRead(boolean)
}


class com.LMS.LMS.ServiceLayer.AdminUserService {
- UserService userService
+ User CreateUser(UserRegistration)
}


interface com.LMS.LMS.RepositoryLayer.QuestionRepository {
~ List<Question> findByQuiz(Quiz)
}

interface com.LMS.LMS.RepositoryLayer.AssignmentTaskRepository {
~ List<AssignmentTask> findByAssignment(Assignment)
}

class com.LMS.LMS.ServiceLayer.CourseService {
- CourseRepository courseRepository
- UserRepository userRepository
- NotificationRepository notificationRepository
- EmailNotificationService emailNotificationService
- AssignmentRepo assignmentRepo
+ Course createCourse(CourseDTO,User)
+ List<Course> getAllCourses()
+ Course getCourseById(Long)
+ Course updateCourse(Long,CourseDTO,User)
+ void deleteCourse(Long,User)
+ void enrollStudent(Long,Long)
+ List<User> getEnrolledStudents(Long)
}


class com.LMS.LMS.ServiceLayer.AssignmentService {
- AssignmentRepo assignmentRepo
- AssignmentGradesRepo gradesRepo
+ Assignment createAssignment(Assignment)
+ Optional<Assignment> getAssignment(Long)
+ List<Assignment> getAllAssignments()
+ AssignmentGrades submitAssignment(AssignmentGrades)
+ AssignmentGrades gradeAssignment(Long,String,String)
+ void DeleteAssignment(long)
}


class com.LMS.LMS.ModelLayer.Attendance {
- Long id
- User student
- Lesson lesson
- boolean attend
+ Long getId()
+ void setId(Long)
+ User getStudent()
+ void setStudent(User)
+ Lesson getLesson()
+ void setLesson(Lesson)
+ boolean isAttend()
+ void setAttend(boolean)
}


interface com.LMS.LMS.RepositoryLayer.QuizGradesRepo {
~ List<QuizGrades> findByStudent(User)
~ List<QuizGrades> findByQuiz(Quiz)
~ Long countByQuizAndStudent(Quiz,User)
}

class com.LMS.LMS.ControllerLayer.UserController {
- UserService userService
+ ResponseEntity<String> Sign_up(UserRegistration)
+ ResponseEntity<String> Login(LoginReq)
+ ResponseEntity<User> ViewProfile(Long)
+ ResponseEntity<User> UpdateProfile(Long,UserRegistration)
}


class com.LMS.LMS.ControllerLayer.StudentCourseController {
- StudentCourseService studentCourseService
- CourseService courseService
+ ResponseEntity<String> Enrollment(Long,Long)
}


class com.LMS.LMS.ModelLayer.Course {
- Long id
- String title
- String description
- String duration
- List<String> mediaFiles
- List<User> students
- User instructor
- List<Assignment> assignments
+ Long getId()
+ void setId(Long)
+ String getTitle()
+ void setTitle(String)
+ String getDescription()
+ void setDescription(String)
+ String getDuration()
+ void setDuration(String)
+ List<String> getMediaFiles()
+ void setMediaFiles(List<String>)
+ List<User> getStudents()
+ void setStudents(List<User>)
+ User getInstructor()
+ void setInstructor(User)
+ List<Assignment> getAssignments()
+ void setAssignments(ArrayList<Assignment>)
}


interface com.LMS.LMS.RepositoryLayer.NotificationRepository {
~ List<Notification> findByRecipientId(Long)
~ List<Notification> findByRecipientIdAndIsReadFalse(Long)
~ List<Notification> findByTypeAndSenderId(String,Long)
}

enum com.LMS.LMS.ModelLayer.Role {
+  Admin
+  Instructor
+  Student
}

class com.LMS.LMS.ControllerLayer.AdminCourseController {
- AdminCourseService adminCourseService
+ ResponseEntity<String> CreateCourse(CourseDTO,User)
+ ResponseEntity<String> DeleteCourse(Long,User)
}


class com.LMS.LMS.DTO.NotificationDTO {
+ Long recipientId
+ Long senderId
+ String message
+ String type
+ boolean isRead
+ Long getRecipientId()
+ Long getSenderId()
+ String getMessage()
+ String getType()
+ boolean getIsRead()
}


class com.LMS.LMS.ServiceLayer.NotificationService {
- NotificationRepository notificationRepository
+ Notification createNotification(NotificationDTO)
+ List<Notification> getNotificationsForRecipient(Long,boolean)
+ List<Notification> getInstructorNotifications(Long)
+ void markAsRead(Long)
}


class com.LMS.LMS.ServiceLayer.QuizGradesService {
- QuizGradesRepo quizGradesRepo
- QuizRepo quizRepo
- UserRepository userRepo
+ QuizGrades startQuizAttempt(Long,Long)
+ QuizGrades submitQuizAttempt(Long,String)
+ QuizGrades gradeQuiz(Long,String,String)
+ List<QuizGrades> getStudentQuizzesGrades(Long)
+ List<QuizGrades> getQuizGrades(Long)
}


interface com.LMS.LMS.RepositoryLayer.UserRepository {
~ Optional<User> findByEmail(String)
}

class com.LMS.LMS.DTO.DeleteCourseRequest {
- CourseDTO courseDTO
- User currentUser
+ CourseDTO getCourseDTO()
+ void setCourseDTO(CourseDTO)
+ User getCurrentUser()
+ void setCurrentUser(User)
}




org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.AttendanceRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.AssignmentGradesRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.QuizRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.AssignmentRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.LessonRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.LessonRepository
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.CourseRepository
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.QuestionRepository
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.AssignmentTaskRepository
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.QuizGradesRepo
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.NotificationRepository
org.springframework.data.jpa.repository.JpaRepository <|-- com.LMS.LMS.RepositoryLayer.UserRepository
@enduml